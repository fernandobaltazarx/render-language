{"version":3,"sources":["vendor/ember-cli/app-prefix.js","webrtc-translate/app.js","webrtc-translate/components/app-version.js","webrtc-translate/components/language-flag.js","webrtc-translate/components/language-select.js","webrtc-translate/components/message-item.js","webrtc-translate/components/message-list.js","webrtc-translate/components/speech-volume-oscillator.js","webrtc-translate/components/start-speech-recognition-button.js","webrtc-translate/controllers/array.js","webrtc-translate/controllers/object.js","webrtc-translate/controllers/room.js","webrtc-translate/helpers/is-equal.js","webrtc-translate/initializers/app-version.js","webrtc-translate/initializers/export-application-global.js","webrtc-translate/models/message.js","webrtc-translate/models/volume-analyser.js","webrtc-translate/router.js","webrtc-translate/routes/index.js","webrtc-translate/routes/room.js","webrtc-translate/services/speech-recognition.js","webrtc-translate/services/tour.js","webrtc-translate/templates/application.js","webrtc-translate/templates/components/language-select.js","webrtc-translate/templates/components/message-item.js","webrtc-translate/templates/components/message-list.js","webrtc-translate/templates/components/speech-volume-oscillator.js","webrtc-translate/templates/components/start-speech-recognition-button.js","webrtc-translate/templates/error.js","webrtc-translate/templates/room.js","webrtc-translate/tests/app.jshint.js","webrtc-translate/tests/components/language-flag.jshint.js","webrtc-translate/tests/components/language-select.jshint.js","webrtc-translate/tests/components/message-item.jshint.js","webrtc-translate/tests/components/message-list.jshint.js","webrtc-translate/tests/components/speech-volume-oscillator.jshint.js","webrtc-translate/tests/components/start-speech-recognition-button.jshint.js","webrtc-translate/tests/controllers/room.jshint.js","webrtc-translate/tests/helpers/is-equal.jshint.js","webrtc-translate/tests/helpers/resolver.js","webrtc-translate/tests/helpers/resolver.jshint.js","webrtc-translate/tests/helpers/start-app.js","webrtc-translate/tests/helpers/start-app.jshint.js","webrtc-translate/tests/integration/components/language-flag-test.js","webrtc-translate/tests/integration/components/language-flag-test.jshint.js","webrtc-translate/tests/models/message.jshint.js","webrtc-translate/tests/models/volume-analyser.jshint.js","webrtc-translate/tests/router.jshint.js","webrtc-translate/tests/routes/index.jshint.js","webrtc-translate/tests/routes/room.jshint.js","webrtc-translate/tests/services/speech-recognition.jshint.js","webrtc-translate/tests/services/tour.jshint.js","webrtc-translate/tests/test-helper.js","webrtc-translate/tests/test-helper.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('webrtc-translate/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'webrtc-translate/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n    'use strict';\n\n    var App;\n\n    Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n    App = Ember['default'].Application.extend({\n        modulePrefix: config['default'].modulePrefix,\n        podModulePrefix: config['default'].podModulePrefix,\n        Resolver: Resolver['default']\n    });\n\n    loadInitializers['default'](App, config['default'].modulePrefix);\n\n    exports['default'] = App;\n\n});","define('webrtc-translate/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'webrtc-translate/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('webrtc-translate/components/language-flag', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['flag'],\n        classNameBindings: ['flagName'],\n\n        flagName: Ember['default'].computed('language', function () {\n            var language = this.get('language');\n\n            if (language) {\n                return language.split('-')[1].toUpperCase();\n            }\n        })\n    });\n\n});","define('webrtc-translate/components/language-select', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        content: null,\n        selectedValue: null,\n\n        didInitAttrs: function didInitAttrs() {\n            this._super.apply(this, arguments);\n            var content = this.get(\"content\");\n\n            if (!content) {\n                this.set(\"content\", []);\n            }\n        },\n\n        actions: {\n            change: function change() {\n                var changeAction = this.get(\"action\");\n                var selectedEl = this.$(\"select\")[0];\n                var selectedIndex = selectedEl.selectedIndex;\n                var content = this.get(\"content\");\n                var selectedValue = content[selectedIndex];\n\n                this.set(\"selectedValue\", selectedValue);\n                changeAction(selectedValue);\n            }\n        }\n    });\n\n});","define('webrtc-translate/components/message-item', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['message'],\n        classNameBindings: ['message.isRemote:remote:local']\n    });\n\n});","define('webrtc-translate/components/message-list', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['chat'],\n        messages: [],\n\n        scrollChatToBottom: Ember['default'].observer('messages.[]', function () {\n            var element = this.$();\n\n            // Wait till the view is updated\n            if (element) {\n                Ember['default'].run.schedule('afterRender', function () {\n                    element.scrollTop(element.prop('scrollHeight'));\n                });\n            }\n        })\n    });\n\n});","define('webrtc-translate/components/speech-volume-oscillator', ['exports', 'ember', 'webrtc-translate/models/volume-analyser'], function (exports, Ember, VolumeAnalyser) {\n\n    'use strict';\n\n    var alias = Ember['default'].computed.alias;\n\n    // TODO: move volume calculations to a service\n    exports['default'] = Ember['default'].Component.extend({\n        isVisible: alias('isSpeechRecognitionActive'),\n\n        init: function init() {\n            this._super();\n\n            this.setProperties({\n                time: 0,\n                wavelength: 6,\n                speed: 2,\n                volumeAnalyser: VolumeAnalyser['default'].create()\n            });\n        },\n\n        onStreamChange: (function () {\n            var stream = this.get('stream');\n            this.get('volumeAnalyser').set('stream', stream);\n        }).observes('stream'),\n\n        draw: function draw() {\n            var canvas = this.$('canvas').get(0);\n            var ctx = canvas.getContext('2d');\n            var speed = this.get('speed');\n            var wavelength = this.get('wavelength');\n            var time = this.get('time');\n            var offset = canvas.height / 2;\n            var volume = this.get('volumeAnalyser.volume');\n            var amplitude = Math.max(volume / 2, 1.1);\n\n            function f(x) {\n                var xprime = x + speed * time;\n                return Math.sin(xprime / wavelength) * amplitude + offset;\n            }\n\n            // Clear\n            ctx.fillStyle = \"rgb(15, 15 ,15)\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            ctx.beginPath();\n            ctx.moveTo(0, f(0));\n            for (var x = 1; x < canvas.width; x++) {\n                ctx.lineTo(x, f(x));\n            }\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"rgb(68, 133, 247)\";\n            ctx.stroke();\n\n            this.set('time', time + 0.7);\n\n            var drawRAF = window.requestAnimationFrame(this.draw.bind(this));\n            this.set('drawRAF', drawRAF);\n        },\n\n        onIsSpeechRecognitionActiveChange: (function () {\n            var isActive = this.get('isSpeechRecognitionActive');\n            return isActive ? this.start() : this.stop();\n        }).observes('isSpeechRecognitionActive'),\n\n        start: function start() {\n            var drawRAF = window.requestAnimationFrame(this.draw.bind(this));\n            this.set('drawRAF', drawRAF);\n        },\n\n        stop: function stop() {\n            var drawRAF = this.get('drawRAF');\n\n            if (drawRAF) {\n                window.cancelAnimationFrame(drawRAF);\n            }\n        }\n    });\n\n});","define('webrtc-translate/components/start-speech-recognition-button', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var inject = Ember['default'].inject;\n    var alias = Ember['default'].computed.alias;\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['speech-recognition-button'],\n\n        recognition: inject.service('speech-recognition'),\n        isSpeechRecognitionActive: alias('recognition.isActive'),\n\n        flagName: (function () {\n            return this.get('language').split('-')[1].toUpperCase();\n        }).property('language'),\n\n        // TODO: make flag a separate component and toggle its\n        // 'isVisible' property instead.\n        onIsSpeechRecognitionActiveChange: (function () {\n            var isActive = this.get('isSpeechRecognitionActive');\n            var startButton = this.$('.flag');\n\n            return isActive ? startButton.hide() : startButton.show();\n        }).observes('isSpeechRecognitionActive'),\n\n        actions: {\n            // TODO: Wait for local video to be on\n            toggleRecognition: function toggleRecognition() {\n                var recognition = this.get(\"recognition\");\n\n                if (this.get(\"isSpeechRecognitionActive\")) {\n                    recognition.stop();\n                } else {\n                    recognition.start();\n                }\n            }\n        }\n    });\n\n});","define('webrtc-translate/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('webrtc-translate/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('webrtc-translate/controllers/room', ['exports', 'ember', 'webrtc-translate/models/message', 'webrtc-translate/config/environment'], function (exports, Ember, Message, config) {\n\n    'use strict';\n\n    var inject = Ember['default'].inject;\n    var alias = Ember['default'].computed.alias;\n\n    exports['default'] = Ember['default'].Controller.extend({\n        isRemoteVideo: false,\n        isDataChannelOpened: false,\n        speechMessage: Message['default'].create(),\n        chatMessage: Message['default'].create(),\n\n        tour: inject.service('tour'),\n\n        recognition: inject.service('speech-recognition'),\n        isSpeechRecognitionActive: alias('recognition.isActive'),\n\n        localSpeechLanguage: 'en-GB',\n        localTranslationLanguage: Ember['default'].computed('localSpeechLanguage', function () {\n            return this.get('localSpeechLanguage').split('-')[0];\n        }),\n        localSpeechLanguageChanged: Ember['default'].observer('localSpeechLanguage', function () {\n            var language = this.get('localSpeechLanguage');\n\n            this.sendLanguage(language);\n            this.set('recognition.language', language);\n        }),\n\n        remoteSpeechLanguage: 'de-DE',\n        remoteTranslationLanguage: Ember['default'].computed('remoteSpeechLanguage', function () {\n            return this.get('remoteSpeechLanguage').split('-')[0];\n        }),\n\n        roomId: null,\n        roomIdChanged: Ember['default'].observer('roomId', function () {\n            console.log('Room ID: ', this.get('roomId'));\n\n            if (this.get('roomId')) {\n                this.setup();\n            }\n        }),\n\n        // TODO: Cleanup init and setup methods\n        init: function init() {\n            this._super();\n\n            var controller = this;\n\n            // Initialize WebRTC\n            var webrtc = new window.SimpleWebRTC({\n                enableDataChannels: true,\n                url: 'https://render-language.herokuapp.com:443',\n                debug: false\n            });\n\n            webrtc.webrtc.on('localStream', function (stream) {\n                console.log('localStream: ', stream);\n                controller.set('localMediaStream', stream);\n            });\n\n            webrtc.webrtc.on('localStreamStopped', function () {\n                console.log('localStreamStopped');\n                controller.set('localMediaStream', null);\n            });\n\n            webrtc.config.localVideoEl = \"local-video\";\n            webrtc.config.remoteVideosEl = \"remote-video\";\n\n            webrtc.startLocalVideo();\n\n            if (!window.localStorage.getItem('show-tour')) {\n                webrtc.on('readyToCall', function () {\n                    window.localStorage.setItem('show-tour', 'nope');\n                    controller.get('tour').start();\n                });\n            }\n\n            this.set('webrtc', webrtc);\n        },\n\n        setup: function setup() {\n            var _arguments = arguments;\n\n            var controller = this;\n            var webrtc = this.get('webrtc');\n            var recognition = this.get('recognition');\n\n            recognition.on('result', function (event) {\n                var interimTranscript = '';\n                var finalTranscript = '';\n                var messages = controller.get('messages');\n                var message = controller.get('speechMessage');\n\n                // TODO figure out a better way to add this message just once\n                if (!messages.contains(message)) {\n                    messages.pushObject(message);\n                }\n\n                for (var i = event.resultIndex; i < event.results.length; ++i) {\n                    var result = event.results[i];\n\n                    if (result.isFinal) {\n                        finalTranscript = result[0].transcript;\n                        console.log(\"Final: \", finalTranscript);\n                        break;\n                    } else {\n                        interimTranscript += result[0].transcript;\n                        console.log(\"Interim: \", interimTranscript);\n                    }\n                }\n\n                message.set('originalContent', interimTranscript);\n\n                if (finalTranscript) {\n                    message.setProperties({\n                        originalContent: finalTranscript,\n                        isFinal: true\n                    });\n                }\n\n                if (message.get('isFinal')) {\n                    controller.handleUntranslatedMessage(message)['finally'](function () {\n                        finalTranscript = '';\n                        controller.set('speechMessage', Message['default'].create());\n                    });\n                }\n\n                console.log(event.results);\n            });\n\n            webrtc.on('readyToCall', function () {\n                webrtc.joinRoom(controller.get('roomId'));\n            });\n\n            webrtc.on('joinedRoom', function () {});\n\n            webrtc.on('error', function (error) {\n                switch (error) {\n                    case 'full':\n                        console.warn('You can\\'t join this room, because it\\'s full.');\n                        break;\n                    default:\n                        console.warn(error);\n                }\n            });\n\n            webrtc.on('videoAdded', function () {\n                controller.set('isRemoteVideo', true);\n            });\n\n            webrtc.on('videoRemoved', function () {\n                controller.set('isRemoteVideo', false);\n            });\n\n            webrtc.on('channelOpen', function (channel) {\n                // Data channel with label 'simplewebrtc' is opened by SimpleWebRTC by default\n                if (channel.label === 'simplewebrtc') {\n                    controller.set('isDataChannelOpened', true);\n                    console.info('Data channel opened.', _arguments);\n\n                    // Send local speech language to the other peer\n                    controller.sendLanguage(controller.get('localSpeechLanguage'));\n                }\n            });\n\n            webrtc.on('channelClose', function (channel) {\n                if (channel.label === 'simplewebrtc') {\n                    controller.set('isDataChannelOpened', false);\n                    console.info('Data channel closed.', _arguments);\n                }\n            });\n\n            webrtc.on('channelError', function (channel) {\n                if (channel.label === 'simplewebrtc') {\n                    controller.set('isDataChannelOpened', false);\n                    console.info('Data channel error.', _arguments);\n                }\n            });\n\n            webrtc.on('channelMessage', function (peer, channelName, data) {\n                if (channelName === 'simplewebrtc') {\n                    var payload = data.payload;\n\n                    switch (data.type) {\n                        case 'message':\n                            payload.isRemote = true;\n                            payload.ifFinal = true;\n\n                            var message = Message['default'].create(payload);\n                            controller.get('messages').pushObject(message);\n\n                            controller.say({\n                                text: message.get('translatedContent'),\n                                lang: controller.get('localSpeechLanguage')\n                            });\n                            break;\n\n                        case 'language':\n                            controller.set('remoteSpeechLanguage', payload.language);\n                            break;\n                    }\n\n                    console.log('Got message: ', data);\n                }\n            });\n        },\n\n        handleUntranslatedMessage: function handleUntranslatedMessage(message) {\n            var _this = this;\n\n            var promise = null;\n\n            if (this.get('isDataChannelOpened')) {\n                promise = this.translate({\n                    source: this.get('localTranslationLanguage'),\n                    target: this.get('remoteTranslationLanguage'),\n                    q: message.get('formattedOriginalContent')\n                }).then(function (data) {\n                    if (data.error) {\n                        console.error(data.error.message);\n                    } else {\n                        var translation = data.data.translations[0].translatedText;\n                        message.set('translatedContent', translation);\n                        _this.sendMessage(message);\n                    }\n\n                    return message;\n                });\n            } else {\n                promise = Ember['default'].RSVP.resolve(message);\n            }\n\n            return promise;\n        },\n\n        translate: function translate(options) {\n            // Wrap jQuery promise in RSVP promise\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                Ember['default'].$.getJSON('https://www.googleapis.com/language/translate/v2?callback=?', {\n                    key: config['default'].GOOGLE_TRANSLATE_API_KEY,\n                    source: options.source,\n                    target: options.target,\n                    q: options.q\n                }).then(resolve, reject);\n            });\n        },\n\n        say: function say(options) {\n            var msg = new window.SpeechSynthesisUtterance();\n            msg.lang = options.lang;\n            msg.text = options.text;\n\n            window.speechSynthesis.speak(msg);\n        },\n\n        sendMessage: function sendMessage(message) {\n            var webrtc = this.get('webrtc');\n\n            webrtc.sendDirectlyToAll('simplewebrtc', 'message', {\n                originalContent: message.get('formattedOriginalContent'),\n                translatedContent: message.get('translatedContent')\n            });\n        },\n\n        sendLanguage: function sendLanguage(language) {\n            var webrtc = this.get('webrtc');\n\n            webrtc.sendDirectlyToAll('simplewebrtc', 'language', {\n                language: language\n            });\n        },\n\n        actions: {\n            handleChatMessage: function handleChatMessage() {\n                var _this2 = this;\n\n                var message = this.get('chatMessage');\n\n                if (message.originalContent) {\n                    message.set('isFinal', true);\n                    this.get('messages').pushObject(message);\n\n                    this.handleUntranslatedMessage(message).then(function () {\n                        _this2.set('chatMessage', Message['default'].create());\n                    });\n                }\n            }\n        }\n    });\n\n});","define('webrtc-translate/helpers/is-equal', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\n    exports['default'] = Ember['default'].Helper.helper(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var leftSide = _ref2[0];\n        var rightSide = _ref2[1];\n\n        return leftSide === rightSide;\n    });\n\n});","define('webrtc-translate/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'webrtc-translate/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('webrtc-translate/initializers/export-application-global', ['exports', 'ember', 'webrtc-translate/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('webrtc-translate/models/message', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Object.extend({\n        originalContent: null,\n        translatedContent: null,\n        isFinal: false,\n        isRemote: false,\n\n        formattedOriginalContent: (function () {\n            var content = this.get('originalContent'),\n                isFinal = this.get('isFinal');\n\n            return isFinal ? this.capitalize(content) : content;\n        }).property('originalContent', 'ifFinal'),\n\n        capitalize: function capitalize(string) {\n            var first_char = /\\S/;\n            return string.replace(first_char, function (match) {\n                return match.toUpperCase();\n            });\n        },\n\n        linebreak: function linebreak(string) {\n            var two_line = /\\n\\n/g;\n            var one_line = /\\n/g;\n\n            return string.replace(two_line, '<p></p>').replace(one_line, '<br>');\n        }\n    });\n\n});","define('webrtc-translate/models/volume-analyser', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Object.extend({\n        stream: null,\n\n        onStreamChange: (function () {\n            var stream = this.get('stream');\n\n            if (stream) {\n                var AudioContext = window.AudioContext || window.webkitAudioContext;\n                var context = new AudioContext();\n                var analyser = context.createAnalyser();\n                analyser.fftSize = 128;\n\n                // TODO check what these exactly do\n                analyser.minDecibels = -90;\n                analyser.maxDecibels = -10;\n                analyser.smoothingTimeConstant = 0.85;\n\n                var source = context.createMediaStreamSource(stream);\n                source.connect(analyser);\n\n                this.set('analyser', analyser);\n                this.set('bufferLength', analyser.fftSize);\n            } else {}\n        }).observes('stream'),\n\n        volume: (function () {\n            var stream = this.get('stream');\n\n            if (stream) {\n                var analyser = this.get('analyser');\n                var bufferLength = this.get('bufferLength');\n                var dataArray = new Uint8Array(bufferLength);\n                analyser.getByteTimeDomainData(dataArray);\n\n                // Return volume in range 0..64\n                var volume = Math.max.apply(null, dataArray) - 128;\n                volume = Math.max(volume, 0);\n                volume = Math.min(volume, 64);\n                return volume;\n            } else {\n                return null;\n            }\n        }).property().volatile().readOnly()\n    });\n\n});","define('webrtc-translate/router', ['exports', 'ember', 'webrtc-translate/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('room', { path: '/rooms/:room_id' });\n  });\n\n  exports['default'] = Router;\n\n});","define('webrtc-translate/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        beforeModel: function beforeModel() {\n            function uuid() {\n                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                    var r = Math.random() * 16 | 0,\n                        v = c === 'x' ? r : r & 0x3 | 0x8;\n                    return v.toString(16);\n                });\n            }\n\n            this.transitionTo('room', uuid());\n        }\n    });\n\n});","define('webrtc-translate/routes/room', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        beforeModel: function beforeModel() {\n            var supports = {\n                webRTC: !!(window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection),\n                webSpeech: !!(window.SpeechRecognition || window.webkitSpeechRecognition),\n                webAudio: !!window.AudioContext\n            };\n\n            if (!(supports.webRTC && supports.webSpeech && supports.webAudio)) {\n                return Ember['default'].RSVP.reject();\n            }\n        },\n\n        model: function model(params) {\n            return {\n                roomId: params.room_id,\n                messages: []\n            };\n        },\n\n        setupController: function setupController(controller, model) {\n            controller.setProperties(model);\n        }\n    });\n\n});","define('webrtc-translate/services/speech-recognition', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Service.extend(Ember['default'].Evented, {\n        isActive: false,\n        languages: ['en-GB', 'en-US', 'de-DE', 'es-ES', 'fr-FR', 'it-IT', 'hu-HU', 'nl-NL', 'pl-PL', 'pt-PT', 'sk-SK', 'sv-SE'],\n        language: 'en-GB',\n\n        init: function init() {\n            this._super();\n\n            var self = this;\n            var SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n            var recognition = new SpeechRecognition();\n\n            recognition.continuous = false;\n            recognition.interimResults = true;\n            recognition.lang = this.get(\"language\");\n\n            recognition.onstart = function () {\n                console.info('recognition:start');\n                self.set(\"isActive\", true);\n                self.trigger(\"start\");\n            };\n\n            recognition.onresult = function (event) {\n                console.info('recognition:result', event);\n                self.trigger(\"result\", event);\n\n                // Stop recognition once there's final result\n                var results = event.results;\n                if (results.length) {\n                    if (results[0].isFinal) {\n                        recognition.abort();\n                    }\n                }\n            };\n\n            recognition.onend = function (event) {\n                console.info('recognition:end', event);\n                self.set(\"isActive\", false);\n                self.trigger(\"end\", event);\n            };\n\n            recognition.onerror = function () {\n                console.info('recognition:error', event);\n                self.set(\"isActive\", false);\n                self.trigger(\"error\", event);\n            };\n\n            this.set(\"recognition\", recognition);\n        },\n\n        start: function start() {\n            this.get(\"recognition\").start();\n        },\n\n        stop: function stop() {\n            this.get(\"recognition\").stop();\n        },\n\n        languageHasChanged: (function () {\n            var language = this.get(\"language\");\n            var recognition = this.get(\"recognition\");\n\n            recognition.lang = language;\n\n            if (this.get('isActive')) {\n                recognition.stop();\n                recognition.start();\n            }\n        }).observes(\"language\")\n    });\n\n});","define('webrtc-translate/services/tour', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Service.extend({\n        init: function init() {\n            this._super();\n\n            var tour = new window.Shepherd.Tour({\n                defaults: {\n                    classes: 'shepherd-theme-arrows shepherd-element-aint-no-river-wide-enough'\n                }\n            });\n\n            tour.addStep('step-1', {\n                title: 'Welcome to Render.Language!',\n                text: 'This app allows you to have a 1-to-1 video call and will translate what the other person is saying.',\n                buttons: [{\n                    text: 'Next',\n                    action: tour.next\n                }]\n            });\n\n            tour.addStep('step-2', {\n                text: 'Click to select the language you speak in.',\n                attachTo: '.language-local',\n                buttons: [{\n                    text: 'Back',\n                    action: tour.back\n                }, {\n                    text: 'Next',\n                    action: tour.next\n                }]\n            });\n\n            tour.addStep('step-3', {\n                text: 'See the language the other person speaks in.',\n                attachTo: '.language-remote',\n                buttons: [{\n                    text: 'Back',\n                    action: tour.back\n                }, {\n                    text: 'Next',\n                    action: tour.next\n                }]\n            });\n\n            tour.addStep('step-4', {\n                text: \"<p><b>After the other person connects</b>, click here to start speech recognition. It will stop automatically when you stop speaking.</p><p>When doing it for the first time, you'll need to allow mic access.</p>\",\n                attachTo: {\n                    element: '.speech-recognition-button',\n                    on: 'bottom'\n                },\n                buttons: [{\n                    text: 'Back',\n                    action: tour.back\n                }, {\n                    text: 'Next',\n                    action: tour.next\n                }]\n            });\n\n            tour.addStep('step-5', {\n                title: \"That's it!\",\n                text: \"<p>Send address of this page to another person to get started.</p>\",\n                buttons: [{\n                    text: 'Back',\n                    action: tour.back\n                }, {\n                    text: 'Okay, got it!',\n                    action: tour.next\n                }]\n            });\n\n            this.tour = tour;\n        },\n\n        start: function start() {\n            this.tour.start();\n        }\n    });\n\n});","define('webrtc-translate/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": null,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[2,2],[2,12]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('webrtc-translate/templates/components/language-select', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"topLevel\": null,\n          \"revision\": \"Ember@2.1.0-beta.4\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 2,\n              \"column\": 2\n            },\n            \"end\": {\n              \"line\": 6,\n              \"column\": 2\n            }\n          },\n          \"moduleName\": \"webrtc-translate/templates/components/language-select.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"option\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(3);\n          morphs[0] = dom.createAttrMorph(element0, 'value');\n          morphs[1] = dom.createAttrMorph(element0, 'selected');\n          morphs[2] = dom.createMorphAt(element0,1,1);\n          return morphs;\n        },\n        statements: [\n          [\"attribute\",\"value\",[\"concat\",[[\"get\",\"item\",[\"loc\",[null,[3,21],[3,25]]]]]]],\n          [\"attribute\",\"selected\",[\"subexpr\",\"is-equal\",[[\"get\",\"item\",[\"loc\",[null,[3,49],[3,53]]]],[\"get\",\"selectedValue\",[\"loc\",[null,[3,54],[3,67]]]]],[],[\"loc\",[null,[3,38],[3,69]]]]],\n          [\"content\",\"item\",[\"loc\",[null,[4,6],[4,14]]]]\n        ],\n        locals: [\"item\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"topLevel\": null,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 8,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/components/language-select.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"select\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createElementMorph(element1);\n        morphs[1] = dom.createMorphAt(element1,1,1);\n        return morphs;\n      },\n      statements: [\n        [\"element\",\"action\",[\"change\"],[\"on\",\"change\"],[\"loc\",[null,[1,8],[1,39]]]],\n        [\"block\",\"each\",[[\"get\",\"content\",[\"loc\",[null,[2,10],[2,17]]]]],[\"key\",\"@index\"],0,null,[\"loc\",[null,[2,2],[6,11]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('webrtc-translate/templates/components/message-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": false,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 11,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/components/message-item.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"content-wrapper\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"content-wrapper\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(fragment, [2, 1]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createAttrMorph(element0, 'class');\n        morphs[1] = dom.createUnsafeMorphAt(element0,1,1);\n        morphs[2] = dom.createAttrMorph(element1, 'class');\n        morphs[3] = dom.createUnsafeMorphAt(element1,1,1);\n        return morphs;\n      },\n      statements: [\n        [\"attribute\",\"class\",[\"concat\",[\"content original-content \",[\"subexpr\",\"if\",[[\"get\",\"message.originalContent\",[\"loc\",[null,[2,45],[2,68]]]],\"visible\",\"hidden\"],[],[\"loc\",[null,[2,40],[2,89]]]]]]],\n        [\"content\",\"message.formattedOriginalContent\",[\"loc\",[null,[3,4],[3,42]]]],\n        [\"attribute\",\"class\",[\"concat\",[\"content translated-content \",[\"subexpr\",\"if\",[[\"get\",\"message.translatedContent\",[\"loc\",[null,[7,47],[7,72]]]],\"visible\",\"hidden\"],[],[\"loc\",[null,[7,42],[7,93]]]]]]],\n        [\"content\",\"message.translatedContent\",[\"loc\",[null,[8,4],[8,35]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('webrtc-translate/templates/components/message-list', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"topLevel\": null,\n          \"revision\": \"Ember@2.1.0-beta.4\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 3,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"webrtc-translate/templates/components/message-list.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"message-item\",[],[\"message\",[\"subexpr\",\"@mut\",[[\"get\",\"message\",[\"loc\",[null,[2,25],[2,32]]]]],[],[]]],[\"loc\",[null,[2,2],[2,34]]]]\n        ],\n        locals: [\"message\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"topLevel\": null,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/components/message-list.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"each\",[[\"get\",\"messages\",[\"loc\",[null,[1,8],[1,16]]]]],[],0,null,[\"loc\",[null,[1,0],[3,9]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('webrtc-translate/templates/components/speech-volume-oscillator', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": null,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/components/speech-volume-oscillator.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"canvas\");\n        dom.setAttribute(el1,\"width\",\"64\");\n        dom.setAttribute(el1,\"height\",\"64\");\n        dom.setAttribute(el1,\"class\",\"circle center\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() { return []; },\n      statements: [\n\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('webrtc-translate/templates/components/start-speech-recognition-button', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": null,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 5,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/components/start-speech-recognition-button.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createElementMorph(element0);\n        morphs[1] = dom.createAttrMorph(element1, 'class');\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"element\",\"action\",[\"toggleRecognition\"],[],[\"loc\",[null,[1,5],[1,35]]]],\n        [\"attribute\",\"class\",[\"concat\",[\"flag circle center \",[\"get\",\"flagName\",[\"loc\",[null,[2,35],[2,43]]]]]]],\n        [\"inline\",\"speech-volume-oscillator\",[],[\"stream\",[\"subexpr\",\"@mut\",[[\"get\",\"stream\",[\"loc\",[null,[3,36],[3,42]]]]],[],[]],\"isSpeechRecognitionActive\",[\"subexpr\",\"@mut\",[[\"get\",\"isSpeechRecognitionActive\",[\"loc\",[null,[3,69],[3,94]]]]],[],[]]],[\"loc\",[null,[3,2],[3,96]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('webrtc-translate/templates/error', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": null,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 5,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/error.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"vertical-center text-center\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"Unfortunately, your browser is currently not supported.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"Consider using the latest version of \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"http://chrome.com\");\n        var el4 = dom.createTextNode(\"Google Chrome\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\".\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() { return []; },\n      statements: [\n\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('webrtc-translate/templates/room', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": false,\n        \"revision\": \"Ember@2.1.0-beta.4\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 34,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"webrtc-translate/templates/room.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-3 text-center\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"language language-local\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"language-select\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6 text-center\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"id\",\"local-video\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"id\",\"remote-video\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-3 text-center\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"language language-remote\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"form\");\n        dom.setAttribute(el1,\"class\",\"chat-form text-center\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1, 1, 1]);\n        var element2 = dom.childAt(element0, [3]);\n        var element3 = dom.childAt(element2, [1]);\n        var element4 = dom.childAt(element0, [5, 1, 1]);\n        var element5 = dom.childAt(fragment, [6]);\n        var morphs = new Array(9);\n        morphs[0] = dom.createMorphAt(element1,1,1);\n        morphs[1] = dom.createMorphAt(element1,3,3);\n        morphs[2] = dom.createAttrMorph(element3, 'class');\n        morphs[3] = dom.createMorphAt(element2,3,3);\n        morphs[4] = dom.createMorphAt(element4,1,1);\n        morphs[5] = dom.createMorphAt(element4,3,3);\n        morphs[6] = dom.createMorphAt(fragment,2,2,contextualElement);\n        morphs[7] = dom.createElementMorph(element5);\n        morphs[8] = dom.createMorphAt(element5,1,1);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"language-select\",[],[\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"recognition.languages\",[\"loc\",[null,[5,34],[5,55]]]]],[],[]],\"action\",[\"subexpr\",\"action\",[[\"subexpr\",\"mut\",[[\"get\",\"localSpeechLanguage\",[\"loc\",[null,[5,76],[5,95]]]]],[],[\"loc\",[null,[5,71],[5,96]]]]],[],[\"loc\",[null,[5,63],[5,97]]]]],[\"loc\",[null,[5,8],[5,99]]]],\n        [\"inline\",\"language-flag\",[],[\"language\",[\"subexpr\",\"@mut\",[[\"get\",\"localSpeechLanguage\",[\"loc\",[null,[6,33],[6,52]]]]],[],[]]],[\"loc\",[null,[6,8],[6,54]]]],\n        [\"attribute\",\"class\",[\"concat\",[\"videos \",[\"subexpr\",\"if\",[[\"get\",\"isRemoteVideo\",[\"loc\",[null,[11,28],[11,41]]]],\"remote-video-on\",\"remote-video-off\"],[],[\"loc\",[null,[11,23],[11,80]]]]]]],\n        [\"inline\",\"start-speech-recognition-button\",[],[\"language\",[\"subexpr\",\"@mut\",[[\"get\",\"localSpeechLanguage\",[\"loc\",[null,[15,47],[15,66]]]]],[],[]],\"stream\",[\"subexpr\",\"@mut\",[[\"get\",\"localMediaStream\",[\"loc\",[null,[15,74],[15,90]]]]],[],[]]],[\"loc\",[null,[15,4],[15,92]]]],\n        [\"content\",\"remoteSpeechLanguage\",[\"loc\",[null,[20,8],[20,32]]]],\n        [\"inline\",\"language-flag\",[],[\"language\",[\"subexpr\",\"@mut\",[[\"get\",\"remoteSpeechLanguage\",[\"loc\",[null,[21,33],[21,53]]]]],[],[]]],[\"loc\",[null,[21,8],[21,55]]]],\n        [\"inline\",\"message-list\",[],[\"messages\",[\"subexpr\",\"@mut\",[[\"get\",\"messages\",[\"loc\",[null,[27,24],[27,32]]]]],[],[]]],[\"loc\",[null,[27,0],[27,34]]]],\n        [\"element\",\"action\",[\"handleChatMessage\"],[\"on\",\"submit\"],[\"loc\",[null,[31,6],[31,48]]]],\n        [\"inline\",\"input\",[],[\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"chatMessage.originalContent\",[\"loc\",[null,[32,16],[32,43]]]]],[],[]],\"placeholder\",\"Type a message here\"],[\"loc\",[null,[32,2],[32,79]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('webrtc-translate/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'app.js should pass jshint.\\napp.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 18, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n5 errors');\n  });\n\n});","define('webrtc-translate/tests/components/language-flag.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/language-flag.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/language-flag.js should pass jshint.\\ncomponents/language-flag.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/language-flag.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/language-flag.js: line 8, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n3 errors');\n  });\n\n});","define('webrtc-translate/tests/components/language-select.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/language-select.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/language-select.js should pass jshint.\\ncomponents/language-select.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/language-select.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/language-select.js: line 7, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 8, col 21, \\'spread/rest operator\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/language-select.js: line 9, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 17, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 18, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 19, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 20, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 21, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncomponents/language-select.js: line 22, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n11 errors');\n  });\n\n});","define('webrtc-translate/tests/components/message-item.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/message-item.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/message-item.js should pass jshint.\\ncomponents/message-item.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/message-item.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/components/message-list.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/message-list.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/message-list.js should pass jshint.\\ncomponents/message-list.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/message-list.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/message-list.js: line 8, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n3 errors');\n  });\n\n});","define('webrtc-translate/tests/components/speech-volume-oscillator.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/speech-volume-oscillator.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/speech-volume-oscillator.js should pass jshint.\\ncomponents/speech-volume-oscillator.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/speech-volume-oscillator.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/speech-volume-oscillator.js: line 8, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n3 errors');\n  });\n\n});","define('webrtc-translate/tests/components/start-speech-recognition-button.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/start-speech-recognition-button.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/start-speech-recognition-button.js should pass jshint.\\ncomponents/start-speech-recognition-button.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncomponents/start-speech-recognition-button.js: line 6, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/controllers/room.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/room.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/room.js should pass jshint.\\ncontrollers/room.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 5, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 6, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 8, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 24, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 48, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 51, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 57, col 48, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 62, col 49, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 73, col 39, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 83, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 84, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 85, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 87, col 40, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 88, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 89, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 90, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 91, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 98, col 18, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 99, col 17, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 122, col 27, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 131, col 35, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 135, col 34, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 138, col 34, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 148, col 34, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 152, col 36, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 156, col 42, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 167, col 43, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 174, col 43, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 181, col 61, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 183, col 17, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 190, col 25, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 210, col 9, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 218, col 24, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 222, col 21, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 238, col 55, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/room.js: line 250, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 258, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 267, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 275, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 276, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/room.js: line 283, col 28, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n44 errors');\n  });\n\n});","define('webrtc-translate/tests/helpers/is-equal.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/is-equal.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/is-equal.js should pass jshint.\\nhelpers/is-equal.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/is-equal.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/is-equal.js: line 3, col 45, \\'destructuring binding\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n3 errors');\n  });\n\n});","define('webrtc-translate/tests/helpers/resolver', ['exports', 'ember/resolver', 'webrtc-translate/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('webrtc-translate/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n\n});","define('webrtc-translate/tests/helpers/start-app', ['exports', 'ember', 'webrtc-translate/app', 'webrtc-translate/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('webrtc-translate/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n\n});","define('webrtc-translate/tests/integration/components/language-flag-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('language-flag', 'Integration | Component | language flag', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(1);\n\n    this.set('language', 'en-GB');\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'topLevel': null,\n          'revision': 'Ember@2.1.0-beta.4',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 35\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'language-flag', [], ['language', ['subexpr', '@mut', [['get', 'language', ['loc', [null, [1, 25], [1, 33]]]]], [], []]], ['loc', [null, [1, 0], [1, 35]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.ok(this.$('div').hasClass('GB'));\n  });\n\n});","define('webrtc-translate/tests/integration/components/language-flag-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/language-flag-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/language-flag-test.js should pass jshint.');\n  });\n\n});","define('webrtc-translate/tests/models/message.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models/message.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/message.js should pass jshint.\\nmodels/message.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/message.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/models/volume-analyser.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models/volume-analyser.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/volume-analyser.js should pass jshint.\\nmodels/volume-analyser.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/volume-analyser.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'router.js should pass jshint.\\nrouter.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 12, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n3 errors');\n  });\n\n});","define('webrtc-translate/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/index.js should pass jshint.\\nroutes/index.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/index.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/routes/room.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/room.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/room.js should pass jshint.\\nroutes/room.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/room.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/services/speech-recognition.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - services/speech-recognition.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/speech-recognition.js should pass jshint.\\nservices/speech-recognition.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/speech-recognition.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n\n});","define('webrtc-translate/tests/services/tour.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - services/tour.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/tour.js should pass jshint.\\nservices/tour.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/tour.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/tour.js: line 4, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nservices/tour.js: line 7, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nservices/tour.js: line 76, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n5 errors');\n  });\n\n});","define('webrtc-translate/tests/test-helper', ['webrtc-translate/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('webrtc-translate/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('webrtc-translate/config/environment', ['ember'], function(Ember) {\n  var prefix = 'webrtc-translate';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"webrtc-translate/tests/test-helper\");\n} else {\n  require(\"webrtc-translate/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"webrtc-translate\",\"version\":\"0.0.0+e4dbe381\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrphrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"webrtc-translate.js"}